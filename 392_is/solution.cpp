#include <bits/stdc++.h>
using namespace std;

// ? Задача - https://leetcode.com/problems/is-subsequence/
// ? Lvl - Easy

bool isSubsequence(string s, string t) {
    if (s.length() == 0) {
        return true;
    }
    if (t.length() == 0) {
        return false;
    }
    int i = 0,j = 0;
    while (j!= t.length()) {
        if (s[i] == t[j]) {
            i++;
            j++;
            if (i == s.length()) {
                return true;
            }
        } else {
            j++;
        }
    }
    return false;
}

/* * Решение
 * Сначала проверка на пограничные случаи: пустая строка всегда подпоследовательность любой строки(даже пустой),
 * если не выполняется, смотрим, пустая ли та, в которой ищем, если да, то ответ всегда false(эта проверка после того,
 * что выше).
 ! Именно если у нас две строки пустые - true !
 * Далее имеем итераторы(указатели) i,j на строки, i - на потенциальную подпоследовательность, j - на строку,
 * в которой ищем
 * Если символы совпадают сдвигаем оба указателя вперед, если нет, то только j-ый
 * В случае, когда символы совпадают, после сдвига проверяем, а не равно ли значение i длине строки s
 * Т.к если да, то все символы уже есть в той строке, т.к s[i] уже не к строке относится
 * Делаем так пока j не будет равнятся длине t (аналогично, если выйдем за все символы, то посмотрели все)
 * Ну и в случае завершения цикла вернем false, т.к перебрали все символы t, но не нашли там s
 *  */

int main() {
    cout << isSubsequence("","ahbgdc");
    return 0;
}
